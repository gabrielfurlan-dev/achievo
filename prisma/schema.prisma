generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_SUPABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  name              String
  imageURL          String
  username          String?
  description       String?
  Reports           Report[]
  User_Notification User_Notification[]
}

model Notification {
  id                  Int                @id @default(autoincrement())
  message             String
  title               String
  wikiURL             String

  User_Notification   User_Notification? @relation(fields: [user_NotificationId], references: [id])
  user_NotificationId Int?
}

model User_Notification {
  id                Int            @id @default(autoincrement())
  User              User           @relation(fields: [userId], references: [id])

  ReadNotifications Notification[]
  userId            Int
}

model Report {
  id          Int      @id @default(autoincrement())
  createdDate DateTime @updatedAt

  checkGoasl    CheckGoal[]
  progressGoals ProgressGoal[]

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model ProgressGoal {
  id          Int      @id @default(autoincrement())
  updatedDate DateTime @updatedAt
  title       String
  index       Int
  value       Decimal
  total       Decimal
  Tags        Tag[]

  Report   Report? @relation(fields: [reportId], references: [id])
  reportId Int?
}

model CheckGoal {
  id          Int      @id @default(autoincrement())
  updatedDate DateTime @updatedAt
  title       String
  index       Int
  checked     Boolean  @default(false)
  Tags        Tag[]

  Report   Report? @relation(fields: [reportId], references: [id])
  reportId Int?
}

model Tag {
  id    Int    @id @default(autoincrement())
  title String
  Icon  String

  color   Color @relation(fields: [colorId], references: [id])
  colorId Int

  ProgressGoal   ProgressGoal? @relation(fields: [progressGoalId], references: [id])
  progressGoalId Int?

  CheckGoal   CheckGoal? @relation(fields: [checkGoalId], references: [id])
  checkGoalId Int?
}

model Color {
  id      Int    @id @default(autoincrement())
  name    String
  hexCode String

  Tag Tag[]
}
